<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Clocktime.Caption" xml:space="preserve">
    <value>Clock Time</value>
  </data>
  <data name="CardNo.Caption" xml:space="preserve">
    <value>Card number</value>
  </data>
  <data name="Clocktype.Caption" xml:space="preserve">
    <value>Clock type</value>
  </data>
  <data name="gridView1.GroupPanelText" xml:space="preserve">
    <value />
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="StartDate.Location" type="System.Drawing.Point, System.Drawing">
    <value>83, 12</value>
  </data>
  <data name="StartDate.Size" type="System.Drawing.Size, System.Drawing">
    <value>97, 22</value>
  </data>
  <data name="EndDate.Location" type="System.Drawing.Point, System.Drawing">
    <value>255, 12</value>
  </data>
  <data name="EndDate.Size" type="System.Drawing.Size, System.Drawing">
    <value>86, 22</value>
  </data>
  <data name="sbtn_select.Text" xml:space="preserve">
    <value>List</value>
  </data>
  <data name="layoutControlItem3.Text" xml:space="preserve">
    <value>To：</value>
  </data>
  <data name="layoutControlItem2.Text" xml:space="preserve">
    <value>Date from：</value>
  </data>
  <data name="$this.Text" xml:space="preserve">
    <value>Clock card records</value>
  </data>
  <data name="barBtn_update.Caption" xml:space="preserve">
    <value>Update attendance records</value>
  </data>
  <data name="barButtonItem3.Caption" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="barBtnDaoRu.Caption" xml:space="preserve">
    <value>Import(A)</value>
  </data>
  <assembly alias="DevExpress.Utils.v10.2" name="DevExpress.Utils.v10.2, Version=10.2.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v10.2" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxMC4yLCBWZXJzaW9uPTEwLjIu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj0yLjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABgAAAAYAAAACQUAAAAP
        BQAAAN4XAAAC9QMAAIlQTkcNChoKAAAADUlIRFIAAAAYAAAAGAgGAAAA4Hc9+AAAAARnQU1BAACxjwv8
        YQUAAAAgY0hSTQAAeiYAAICEAAD6AAAAgOgAAHUwAADqYAAAOpgAABdwnLpRPAAAAAlwSFlzAAAK+wAA
        CvsBy58dkAAAA2tJREFUSEu11V1oU3cYx/H/YFDtYHMoA3XCxBvZrgSRgezaq4lXu92u5iZ45aUMRRgb
        VhHsLtTp7Gw7HGMWSzU5zclJ83KStIlJmpi0adPWJs1Lk5xzGtPGak7y2//5lzLQw1xtDXyv8pzPc14S
        DjNNk7VarR2tdvt2u902eNhkBreukEk2LdjebJq+Fy+aTR62KK6ZPrJZs9m83GismjxscSbZbHX1+Urt
        6TLeJHeyhKLRgGm2wK8fT1/6nmzWaDRQ1ZY2XHymjK+vx5DVnsGWqaAnlkV9eQW6/u8M2axeX0GxVN1Q
        c7kyvu+J4fjVkFjw1b0oOi7ZcWYkiVzVwGJZE3Nks1qtjlyutKG6BlP4/CcVhy760OWdRU9iAbt/VdBx
        TcLfUwuoL9XEHNnMMGqYncv97wb80zj6s4rDXT4c7PZg3zUXLoQy6E3ncTaYRlqv82dRF7NkM53fq6nM
        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
</value>
  </data>
</root>