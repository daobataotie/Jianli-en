<?xml version="1.0" encoding="utf-8" ?> 
<sqlMap namespace="ShouldPayAccountCondition" xmlns="http://ibatis.apache.org/mapping" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <alias>
        <typeAlias alias="ShouldPayAccountCondition" type="Book.Model.ShouldPayAccountCondition, Book.Model" />
    </alias>
    <resultMaps>                                    
        <resultMap id="ShouldPayAccountConditionResult" class="ShouldPayAccountCondition">
			<result property="ShouldPayAccountConditionId" column="ShouldPayAccountConditionId" />
			<result property="StartInvoiceDate" column="StartInvoiceDate" />
			<result property="EndInvoiceDate" column="EndInvoiceDate" />
			<result property="StartJHDate" column="StartJHDate" />
			<result property="EndJHDate" column="EndJHDate" />
			<result property="StartFKDate" column="StartFKDate" />
			<result property="EndFKDate" column="EndFKDate" />
			<result property="SupplierStartId" column="SupplierStartId" />
			<result property="SupplierEndId" column="SupplierEndId" />
			<result property="ProductStartId" column="ProductStartId" />
			<result property="ProductEndId" column="ProductEndId" />
			<result property="COStartId" column="COStartId" />
			<result property="COEndId" column="COEndId" />
			<result property="CusXOId" column="CusXOId" />
			<result property="EmpStartId" column="EmpStartId" />
			<result property="EmpEndId" column="EmpEndId" />
		<result property="EmpEnd" column="EmpEndId" lazyLoad="false" select="Employee.select_by_primary_key" />		<result property="EmpStart" column="EmpStartId" lazyLoad="false" select="Employee.select_by_primary_key" />		<result property="ProductEnd" column="ProductEndId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="ProductStart" column="ProductStartId" lazyLoad="false" select="Product.select_by_primary_key" />		<result property="SupplierEnd" column="SupplierEndId" lazyLoad="false" select="Supplier.select_by_primary_key" />		<result property="SupplierStart" column="SupplierStartId" lazyLoad="false" select="Supplier.select_by_primary_key" />        </resultMap>
    </resultMaps>
		
    <statements>
		<select id="has_rows_of" resultClass="bool">
			<![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ShouldPayAccountCondition]
				WHERE
				[ShouldPayAccountConditionId] = #ShouldPayAccountConditionId#
                        			                   
				) then 1 else 0 end
                ]]>
		</select>
		<select id="has_rows" resultClass="bool">
			<![CDATA[select case when exists(
				SELECT
					*
				FROM
					[dbo].[ShouldPayAccountCondition]
 								
				) then 1 else 0 end
                ]]>
		</select>
		<!-- select by primary key -->
        <select id="select_by_primary_key" resultMap="ShouldPayAccountConditionResult" parameterClass="ShouldPayAccountCondition">
			<![CDATA[SELECT
				[ShouldPayAccountConditionId],
				[StartInvoiceDate],
				[EndInvoiceDate],
				[StartJHDate],
				[EndJHDate],
				[StartFKDate],
				[EndFKDate],
				[SupplierStartId],
				[SupplierEndId],
				[ProductStartId],
				[ProductEndId],
				[COStartId],
				[COEndId],
				[CusXOId],
				[EmpStartId],
				[EmpEndId]
			FROM
				[dbo].[ShouldPayAccountCondition]
			WHERE
				[ShouldPayAccountConditionId] = #ShouldPayAccountConditionId#
                			          
         		]]>
        </select>
		
		<!-- delete -->
        <delete id="delete" parameterClass="string">
				<![CDATA[                
                DELETE FROM [dbo].[ShouldPayAccountCondition]
			WHERE            
				[ShouldPayAccountConditionId] = #ShouldPayAccountConditionId#
                    		]]>
        </delete>

		<!-- select all -->
        <select id="select_all" resultMap="ShouldPayAccountConditionResult" >
			<![CDATA[SELECT *
			FROM 
				[dbo].[ShouldPayAccountCondition]
                			                   

			]]>
        </select>
        
		<select id="count_all" resultClass="int">
		<![CDATA[	select count(*)
			from 
				[dbo].[ShouldPayAccountCondition]
                			          
         ]]>
		</select>
		
		<select id="select_all_with_paging" resultMap="ShouldPayAccountConditionResult">
        <![CDATA[    SELECT *
            FROM
            (
                SELECT *, row_number() over(order by $OrderStatement$) rownumber
                FROM    
                    [dbo].[ShouldPayAccountCondition]
                    			          
         
            ) t
            WHERE t.rownumber between #Row1# and #Row2#
             ]]>
		</select>
		
		<!-- insert -->
        <insert id="insert" parameterClass="ShouldPayAccountCondition">
			 <![CDATA[ INSERT INTO [dbo].[ShouldPayAccountCondition] 
			(
				[ShouldPayAccountConditionId],
				[StartInvoiceDate],
				[EndInvoiceDate],
				[StartJHDate],
				[EndJHDate],
				[StartFKDate],
				[EndFKDate],
				[SupplierStartId],
				[SupplierEndId],
				[ProductStartId],
				[ProductEndId],
				[COStartId],
				[COEndId],
				[CusXOId],
				[EmpStartId],
				[EmpEndId]
			) 
			VALUES 
			(
				#ShouldPayAccountConditionId#,
				#StartInvoiceDate#,
				#EndInvoiceDate#,
				#StartJHDate#,
				#EndJHDate#,
				#StartFKDate#,
				#EndFKDate#,
				#SupplierStartId#,
				#SupplierEndId#,
				#ProductStartId#,
				#ProductEndId#,
				#COStartId#,
				#COEndId#,
				#CusXOId#,
				#EmpStartId#,
				#EmpEndId#
			)
             ]]>
        </insert>
		
		<!-- update -->
        <update id="update" parameterClass="ShouldPayAccountCondition">
		 <![CDATA[ 	UPDATE [ShouldPayAccountCondition] SET
				[StartInvoiceDate] = #StartInvoiceDate#,
				[EndInvoiceDate] = #EndInvoiceDate#,
				[StartJHDate] = #StartJHDate#,
				[EndJHDate] = #EndJHDate#,
				[StartFKDate] = #StartFKDate#,
				[EndFKDate] = #EndFKDate#,
				[SupplierStartId] = #SupplierStartId#,
				[SupplierEndId] = #SupplierEndId#,
				[ProductStartId] = #ProductStartId#,
				[ProductEndId] = #ProductEndId#,
				[COStartId] = #COStartId#,
				[COEndId] = #COEndId#,
				[CusXOId] = #CusXOId#,
				[EmpStartId] = #EmpStartId#,
				[EmpEndId] = #EmpEndId#
			WHERE
				[ShouldPayAccountConditionId] = #ShouldPayAccountConditionId#
                    ]]>
        </update>
		<select id="existsPrimary" resultClass="bool" parameterClass="string">
			<![CDATA[
			select case when exists(
				select *
				from [dbo].[ShouldPayAccountCondition]
				where  ShouldPayAccountConditionId = #value#                 			                   
				)
				then 1 else 0 end
			]]>
		</select>
		
    </statements>
</sqlMap>
